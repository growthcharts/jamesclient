% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/upload_txt.R
\name{upload_txt}
\alias{upload_txt}
\title{Upload and parse data for JAMES}
\usage{
upload_txt(
  txt,
  host = "https://groeidiagrammen.nl",
  format = 2L,
  schema = NULL
)
}
\arguments{
\item{txt}{A JSON string, URL or file with the data in JSON
format. The input data adhere to specification
\href{https://www.ncj.nl/themadossiers/informatisering/basisdataset/documentatie/?cat=12}{BDS JGZ 3.2.5},
and are converted to JSON according to \code{schema}.}

\item{host}{String with URL of the JAMES host machine. Defaults to
\verb{https://groeidiagrammen.nl}.}

\item{format}{Integer. JSON schema format number. There are currently two
schemas supported, formats \code{1} and \code{2}.}

\item{schema}{A file name (including path) with the JSON validation schema.
The \code{schema} argument overrides \code{format}. The function extracts the
character following the string \code{"_v"} in the base name, and overwrites the
\code{format} argument by the integer representation of the found character.}
}
\value{
An object of class \code{\link[httr:response]{httr::response()}}
}
\description{
Client side upload of a JSON file, string or URL with BDS data, checks the data,
stores its contents as a tibble with a person attribute on host,
and returns an object of class \code{\link[httr:response]{httr::response()}}
that contains the results of the request.
}
\details{
JSON format: See
\url{https://stefvanbuuren.name/jamesdocs/getting-data-into-james.html}
for the specification of the JSON format.

User agent: The function \code{upload_txt()} searches for an object called \code{ua} on the search
list. The \code{ua} object is an optional user agent, a request that identifies
yourself to the API. For example, run
\code{httr::user_agent("https://github.com/myaccount")} (with
\code{myaccount} replaced by your github user name) before
calling \code{upload_txt()}. See
\url{https://httr.r-lib.org/articles/api-packages.html} for details. Setting
the user agent is not required.

Append \code{"/json"} to \code{path} and set \code{query = "auto_unbox=TRUE&force=TRUE"}
to obtain a partial JSON representation of the S4 class \code{individual}. At present, it is not
possible to rebuild the S4 class \code{individual} from its JSON representation because
the S4 class depends on environments, and these are not converted to JSON.
Warning: The S4 class
\code{individual} is an internal format that is in development. It is likely to
change, so don't build applications based on this data structure. If you need
components from the internal structure (e.g. Z-scores, brokenstick estimates) it
is better to develop a dedicated API for obtaining these.
}
\examples{
\dontrun{
library(httr)
fn <- system.file("extdata", "bds_v1.0", "smocc", "Laura_S.json", package = "jamesdemodata")
js <- jsonlite::toJSON(jsonlite::fromJSON(fn), auto_unbox = TRUE)

url <- "https://groeidiagrammen.nl/ocpu/library/james/testdata/client3.json"
host <- "https://groeidiagrammen.nl"
# host <- "http://localhost"

# upload JSON file
r1 <- upload_txt(fn, host, format = 1)
identical(status_code(r1), 201L)

# upload JSON string
r2 <- upload_txt(js, host, format = 1)
identical(status_code(r2), 201L)

# upload JSON from external URL
r3 <- upload_txt(url, host, format = 1)
identical(status_code(r3), 201L)
}
}
