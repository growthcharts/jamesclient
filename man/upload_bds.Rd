% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/upload_bds.R
\name{upload_bds}
\alias{upload_bds}
\title{Upload and parse BDS file to JAMES}
\usage{
upload_bds(bds, host = "http://groeidiagrammen.nl",
  path = "ocpu/library/james")
}
\arguments{
\item{bds}{File name or a string referring to the data (in JSON
format) to be uploaded. The variable specification are expected
to be according specification
\href{https://www.ncj.nl/themadossiers/informatisering/basisdataset/documentatie/?cat=12}{BDS
 JGZ 3.2.5}, and converted to JSON.}

\item{host}{String with URL of the JAMES host machine. Defaults to
\code{http://groeidiagrammen.nl}.}

\item{path}{Path to JAMES application on host. Defaults to
\code{ocpu/library/james}.}
}
\value{
An object of class \code{\link[httr:response]{response}}
}
\description{
Uploads a JSON file or string with BDS-coded data, parses its
contents into an object of class \linkS4class{individual}. The
function returns various url's on the uploaded data.
}
\note{
At present there is only minimal error checking on the BDS file.
}
\examples{
library(jamesclient)

# upload as JSON file
fn <- file.path(path.package("jamesclient"), "testdata", "client3.json")
r1 <- upload_bds(fn)
get_url(r1, "return")

# upload as JSON string
data("installed.cabinets", package = "jamestest")
ind <- installed.cabinets[[3]][[4]]
js <- minihealth::convert_individual_bds(ind)
r2 <- upload_bds(js)
get_url(r2, "return")
}
\seealso{
\code{\link[minihealth]{convert_bds_individual}},
\code{\link{request_site}}, \code{\link[httr:response]{response}}
}
\keyword{client}
